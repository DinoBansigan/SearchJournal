@page "/SearchResults"
@inject NavigationManager navManager

@if (searchResults == null)
{
    <h2 class="mb-3 text-primary text-center text-dark">Searching for "<span class="font-weight-bold">@searchKey</span>"</h2>
    <SpinKitFoldingCube />
}
else
{
    if (searchResults.Count == 0)
    {
        <div class="container text-lg-center">
            <p>Could not find results for "<span class="font-weight-bold">@searchKey</span>"</p>
        </div>
    }
    else
    {
        <h2 class="mb-3 text-primary text-center text-dark">Search Results for "<span class="font-weight-bold">@searchKey</span>"</h2>
        <hr />
        <ul>
            @foreach (var result in searchResults)
            {
                string title = string.IsNullOrEmpty(result.Title) ? "Untitled Post" : result.Title;
                UriBuilder uriBuilder = new UriBuilder("https://journal.dinobansigan.com/" + result.Slug);
                string publishedDate = result.CreateDate.ToString("yyyy-MM-dd: ");
                string linkText = publishedDate + title;
                <li><h4 style="color: #045FB4;"><a href="@uriBuilder.ToString()" target="_blank">@linkText</a></h4></li>
            }
        </ul>
    }

    <div class="mt-4 mb-4 text-center">
        <button class="btn btn-primary btn-lg" @onclick="NavigateBackToSearchPage">Search Again</button>
    </div>
}

@code {
    string searchKey { get; set; }
    List<WriteAs.NET.Client.Models.Post> searchResults = null;

    protected override async Task OnInitializedAsync()
    {
        var uri = navManager.ToAbsoluteUri(navManager.Uri);
        if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("searchKey", out var param))
        {
            searchKey = param.First();
        }

        if (!string.IsNullOrEmpty(searchKey))
        {
            using (var client = new WriteAs.NET.WriteAsClient("https://write.as/"))
            {
                searchResults = await client.Search("dino", searchKey, WriteAs.NET.Shared.SortOrder.Descending);
            }
        }
    }

    private void NavigateBackToSearchPage()
    {
        navManager.NavigateTo("/");
    }
}
